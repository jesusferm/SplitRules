/**
 * Clase: GUISplitRules.java
 * Descripción: Contiene la interfaz gráfica declarada para el programa de 
            separación de reglas. Los métodos que utiliza esta clases, están
            declarados en la clases MetodosExtractRules.java
 */
package splitrulesclassifiertree;

import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.JOptionPane;

/**
 *
 * @author Merino Merino Jesús Fernando
 * @author Santiago López José Luís
 */
public class GUISplitRules extends javax.swing.JFrame {
    /*Variable que instancia a la clase MetodosExtractRules para permitir a los
    métodos declarados en la misma*/
    MethodsSplitRules metodosUso = new MethodsSplitRules();
    /*Variable que almacena la ruta del archivo original de algoritmo
    clasificador*/
    String pathFileOpen = "";
    /*Variable que almacena la ruta del archivo a guardar, seleccionado por el
    usuario*/
    String nameFileOutput = "";
    
    ManualSplitRules showManual = new ManualSplitRules();
    /**
     * Creates new form OpenFile
     */
    public GUISplitRules() {
        initComponents();
        setLocationRelativeTo(null);
        Image icon3 = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/icono.png"));
        setIconImage(icon3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFchAbrirArch = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtAreaTreeClass = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jlbNameFileOpen = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenOpenFile = new javax.swing.JMenuItem();
        jMenExportRules = new javax.swing.JMenuItem();
        jMenExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenHelp = new javax.swing.JMenuItem();
        jMenAbout = new javax.swing.JMenuItem();

        jFchAbrirArch.setFileFilter(new MyCustomFilterOpen());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Extractor de reglas");

        jtxtAreaTreeClass.setColumns(20);
        jtxtAreaTreeClass.setRows(5);
        jScrollPane1.setViewportView(jtxtAreaTreeClass);

        jlbNameFileOpen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNameFileOpen.setText("Ningún archivo abierto");
        jlbNameFileOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbNameFileOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbNameFileOpen)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("Archivo");

        jMenOpenFile.setText("Abrir archivo");
        jMenOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenOpenFileActionPerformed(evt);
            }
        });
        jMenu1.add(jMenOpenFile);

        jMenExportRules.setText("Exportar reglas");
        jMenExportRules.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenExportRulesActionPerformed(evt);
            }
        });
        jMenu1.add(jMenExportRules);

        jMenExit.setText("Salir");
        jMenExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ayuda");

        jMenHelp.setText("Manual");
        jMenHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenHelpActionPerformed(evt);
            }
        });
        jMenu2.add(jMenHelp);

        jMenAbout.setText("Acerca de");
        jMenAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenAboutActionPerformed(evt);
            }
        });
        jMenu2.add(jMenAbout);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenOpenFileActionPerformed
        String rutaArchAaBIR = metodosUso.openFileWithDialogue(jFchAbrirArch, pathFileOpen);
        if(rutaArchAaBIR.length()>0){
            if(metodosUso.validateFileBeforeOpen(rutaArchAaBIR)){
                //Se asigna a rutaAarch la ruta del archivo abierto correctamente
                pathFileOpen = rutaArchAaBIR;
                //Se agrega el nombre del archivo abierto en el jlbNameFileOpen
                jlbNameFileOpen.setText("Archivo abierto: "+pathFileOpen);
                metodosUso.addTextToJTextArea(jtxtAreaTreeClass, pathFileOpen);
            }else{
                JOptionPane.showMessageDialog(null, "El archivo no contiene resultado de un algoritmo clasificador.", "Archivo erróneo", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jMenOpenFileActionPerformed

    private void jMenExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenExitActionPerformed

    private void jMenExportRulesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenExportRulesActionPerformed
        if(pathFileOpen.length()>0){
            nameFileOutput = metodosUso.getNameFileToSave(pathFileOpen);
            if(nameFileOutput.length()>0){
                System.out.println("El nombre de archivo a guardar es: "+nameFileOutput);
                metodosUso.createTempFileRules(pathFileOpen, metodosUso.getBeginRuleFile(pathFileOpen));
                String nomTemp = metodosUso.getPathFile(pathFileOpen)+System.getProperty("file.separator")+"tempRules.txt";
                metodosUso.crearMatrizNivel(nomTemp, pathFileOpen, nameFileOutput);
                metodosUso.deleteFile(nomTemp);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Abra un archivo antes de exportar reglas.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenExportRulesActionPerformed

    private void jMenAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenAboutActionPerformed
        AboutSplitRules newAcercaDe = new AboutSplitRules(this, true);
        newAcercaDe.setVisible(true);
    }//GEN-LAST:event_jMenAboutActionPerformed

    private void jMenHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenHelpActionPerformed
        showManual.setVisible(true);
    }//GEN-LAST:event_jMenHelpActionPerformed

    class MyCustomFilterOpen extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            return file.isDirectory() || file.getAbsolutePath().endsWith(".txt") || file.getAbsolutePath().endsWith(".csv");
        }
        @Override
        public String getDescription() {
            return "Documentos de texto (*.txt, *.csv)";
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFchAbrirArch;
    private javax.swing.JMenuItem jMenAbout;
    private javax.swing.JMenuItem jMenExit;
    private javax.swing.JMenuItem jMenExportRules;
    private javax.swing.JMenuItem jMenHelp;
    private javax.swing.JMenuItem jMenOpenFile;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlbNameFileOpen;
    private javax.swing.JTextArea jtxtAreaTreeClass;
    // End of variables declaration//GEN-END:variables
}